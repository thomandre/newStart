<!doctype html>
<html lang="en" xmlns:fb="http://www.facebook.com/2008/fbml" ng-app="havefyveApp">
    <head>
        <meta charset="utf-8">
        <meta name="description" content="HaveFyve, le réseau social des cadeaux. Idées de cadeaux pour faire vraiment plaisir." />
        <meta name="keywords" content="cadeaux, social" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>{% block title %}HaveFyve{% endblock %}</title>
        {% block stylesheets %}
            <link rel="stylesheet" href="{{ asset('bundles/newstartcommon/css/vendor/bootstrap/css/bootstrap.css') }}">
            <link rel="stylesheet" href="{{ asset('bundles/newstartcommon/css/vendor/normalize.css') }}">
            <link rel="stylesheet" href="{{ asset('bundles/newstartcommon/css/vendor/style.css') }}">
            <link rel="stylesheet" href="{{ asset('bundles/newstartcommon/css/main.css') }}">
        {% endblock %}

    </head>
    <body>
        {{ facebook_initialize({'xfbml': true, 'fbAsyncInit': 'onFbInit();'}) }}
        {% block body %}{% endblock %}
        {% block javascripts %}
            <script src="http://code.jquery.com/jquery-1.9.1.min.js"></script>
            <script src="{{ asset('bundles/newstartcommon/js/vendor/jquery.ba-outside-events.min.js') }}"></script>
            <script>
                function goLogIn(){
                    window.location.href = "{{ path('_security_check') }}";
                }
                function goLogOut(){
                    window.location.href = "{{ path('_security_logout') }}";
                }
                function onFbInit() {
                    if (typeof(FB) != 'undefined' && FB != null ) {
                        FB.Event.subscribe('auth.login', function(response) {
                            if (response.session || response.authResponse) {
                                //console.log('login..');
                                setTimeout(goLogIn, 500);
                            }
                        });
                        FB.Event.subscribe('auth.logout', function(response) {
                            setTimeout(goLogOut, 500);
                        });
                        FB.getLoginStatus(function(response) {
                          if (response.status === 'connected') {
                            var uid = response.authResponse.userID;
                            var accessToken = response.authResponse.accessToken;
                            $('#disconnect').show();
                          } else if (response.status === 'not_authorized') {
                            $('#connect').show();
                            //console.log('fb not authorized');
                          } else {
                            $('#connect').show();
                            //console.log('fb not connected');
                          }
                        });
                    }
                }
                $('.settings').click(function (event) {
                    event.preventDefault();
                    $('.header .ddown-menu').toggle();
                    $(".header .ddown-menu").bind("clickoutside", function(event){
                        if($(event.target).attr('class') != 'glyphicon glyphicon-play' && $(event.target).attr('class') != 'settings') {
                            event.preventDefault();
                            $('.header .ddown-menu').hide();
                            $('.header .ddown-menu').unbind("clickoutside");                            
                        }
                    });
                });

                $('#logout').click(function (event) {
                    event.preventDefault();
                    FB.getLoginStatus(function () {
                        FB.logout(function(response) {
                            return;
                        });
                    });
                });




            </script>
        {% endblock %}
    </body>
</html> 